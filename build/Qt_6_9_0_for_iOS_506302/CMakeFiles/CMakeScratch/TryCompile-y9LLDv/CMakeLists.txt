cmake_minimum_required(VERSION 3.30.5.0)
set(CMAKE_MODULE_PATH "/Users/ruslanhincagov/Qt/6.9.0/ios/lib/cmake/Qt6/platforms;/Users/ruslanhincagov/Qt/6.9.0/ios/lib/cmake/Qt6;/Users/ruslanhincagov/Qt/6.9.0/ios/lib/cmake/Qt6/3rdparty/extra-cmake-modules/find-modules;/Users/ruslanhincagov/Qt/6.9.0/ios/lib/cmake/Qt6/3rdparty/kwin;/Users/ruslanhincagov/Qt/6.9.0/ios/lib/cmake/Qt6;/Users/ruslanhincagov/Qt/6.9.0/ios/lib/cmake/Qt6/3rdparty/extra-cmake-modules/find-modules;/Users/ruslanhincagov/Qt/6.9.0/ios/lib/cmake/Qt6/3rdparty/kwin")
cmake_policy(SET CMP0128 OLD)
project(CMAKE_TRY_COMPILE CXX)
set(CMAKE_VERBOSE_MAKEFILE 1)
set(CMAKE_CXX_FLAGS "-DQT_QML_DEBUG")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${COMPILE_DEFINITIONS}")
set(CMAKE_CXX_FLAGS_DEBUG "-g")
set(CMAKE_EXE_LINKER_FLAGS "")
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${EXE_LINKER_FLAGS}")
include_directories(${INCLUDE_DIRECTORIES})
set(CMAKE_SUPPRESS_REGENERATION 1)
link_directories(${LINK_DIRECTORIES})
add_definitions([==[-DHAVE_SHM_OPEN_SHM_UNLINK]==])
cmake_policy(SET CMP0065 NEW)
cmake_policy(SET CMP0083 NEW)
cmake_policy(SET CMP0155 OLD)
cmake_policy(SET CMP0157 OLD)
include("${CMAKE_ROOT}/Modules/Internal/HeaderpadWorkaround.cmake")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "/Users/ruslanhincagov/Downloads/Simple-English-learning-APP-main/build/Qt_6_9_0_for_iOS_506302/CMakeFiles/CMakeScratch/TryCompile-y9LLDv")
add_executable(cmTC_d6581)
target_sources(cmTC_d6581 PRIVATE
  "/Users/ruslanhincagov/Downloads/Simple-English-learning-APP-main/build/Qt_6_9_0_for_iOS_506302/CMakeFiles/CMakeScratch/TryCompile-y9LLDv/src.cxx"
)
file(GENERATE OUTPUT "${CMAKE_BINARY_DIR}/cmTC_d6581_$<UPPER_CASE:$<CONFIG>>_loc"
     CONTENT $<TARGET_FILE:cmTC_d6581>)
set_property(TARGET cmTC_d6581 PROPERTY "CXX_STANDARD" "17")
set_property(TARGET cmTC_d6581 PROPERTY "CXX_STANDARD_REQUIRED" "ON")
target_link_libraries(cmTC_d6581 ${LINK_LIBRARIES})
